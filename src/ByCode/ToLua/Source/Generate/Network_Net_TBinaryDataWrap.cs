//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Network_Net_TBinaryDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Network.Net.TBinaryData), typeof(Network.Net.TMemoryBufferEx));
		L.RegFunction("IsEmpty", IsEmpty);
		L.RegFunction("New", _CreateNetwork_Net_TBinaryData);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateNetwork_Net_TBinaryData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Network.Net.TBinaryData obj = new Network.Net.TBinaryData();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(int)))
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				Network.Net.TBinaryData obj = new Network.Net.TBinaryData(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Network.Net.TBinaryData.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsEmpty(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Network.Net.TBinaryData obj = (Network.Net.TBinaryData)ToLua.CheckObject(L, 1, typeof(Network.Net.TBinaryData));
			bool o = obj.IsEmpty();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

