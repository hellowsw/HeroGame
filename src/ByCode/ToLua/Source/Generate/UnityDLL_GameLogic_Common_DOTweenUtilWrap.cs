//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityDLL_GameLogic_Common_DOTweenUtilWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityDLL.GameLogic.Common.DOTweenUtil), typeof(System.Object));
		L.RegFunction("DOMove", DOMove);
		L.RegFunction("DOMoveWithTimeScale", DOMoveWithTimeScale);
		L.RegFunction("DoAnchoredPosition", DoAnchoredPosition);
		L.RegFunction("DOMoveX", DOMoveX);
		L.RegFunction("DOMoveY", DOMoveY);
		L.RegFunction("DOLocalMoveY", DOLocalMoveY);
		L.RegFunction("DOIntValue", DOIntValue);
		L.RegFunction("DOMoveZ", DOMoveZ);
		L.RegFunction("DORotate", DORotate);
		L.RegFunction("DOScale", DOScale);
		L.RegFunction("DOScaleCall", DOScaleCall);
		L.RegFunction("DOAlpha", DOAlpha);
		L.RegFunction("DOAlphaText", DOAlphaText);
		L.RegFunction("DOAlphaImage", DOAlphaImage);
		L.RegFunction("DOColor", DOColor);
		L.RegFunction("DOPath", DOPath);
		L.RegFunction("DOShake", DOShake);
		L.RegFunction("DOShakeRotate", DOShakeRotate);
		L.RegFunction("Stop", Stop);
		L.RegFunction("GetEaseType", GetEaseType);
		L.RegFunction("New", _CreateUnityDLL_GameLogic_Common_DOTweenUtil);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityDLL_GameLogic_Common_DOTweenUtil(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityDLL.GameLogic.Common.DOTweenUtil obj = new UnityDLL.GameLogic.Common.DOTweenUtil();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityDLL.GameLogic.Common.DOTweenUtil.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOMove(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(UnityEngine.Vector3), typeof(float), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMove(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Vector3), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMove(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(UnityEngine.Vector3), typeof(float), typeof(float), typeof(LuaInterface.LuaFunction)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				LuaFunction arg4 = ToLua.ToLuaFunction(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMove(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Vector3), typeof(float), typeof(float), typeof(LuaInterface.LuaFunction)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				LuaFunction arg4 = ToLua.ToLuaFunction(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMove(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(UnityEngine.Vector3), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMove(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Vector3), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMove(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Vector3), typeof(float), typeof(float), typeof(LuaInterface.LuaFunction), typeof(DG.Tweening.Ease)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				LuaFunction arg4 = ToLua.ToLuaFunction(L, 5);
				DG.Tweening.Ease arg5 = (DG.Tweening.Ease)ToLua.ToObject(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMove(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(UnityEngine.Vector3), typeof(float), typeof(float), typeof(LuaInterface.LuaFunction), typeof(DG.Tweening.Ease)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				LuaFunction arg4 = ToLua.ToLuaFunction(L, 5);
				DG.Tweening.Ease arg5 = (DG.Tweening.Ease)ToLua.ToObject(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMove(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(float), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMove(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(float), typeof(float), typeof(int), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				float arg6 = (float)LuaDLL.lua_tonumber(L, 7);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMove(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DOMove");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOMoveWithTimeScale(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Transform));
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
			DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveWithTimeScale(arg0, arg1, arg2, arg3);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DoAnchoredPosition(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Vector3), typeof(float), typeof(float), typeof(LuaInterface.LuaFunction), typeof(DG.Tweening.Ease)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				LuaFunction arg4 = ToLua.ToLuaFunction(L, 5);
				DG.Tweening.Ease arg5 = (DG.Tweening.Ease)ToLua.ToObject(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DoAnchoredPosition(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(UnityEngine.Vector3), typeof(float), typeof(float), typeof(LuaInterface.LuaFunction), typeof(DG.Tweening.Ease)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				LuaFunction arg4 = ToLua.ToLuaFunction(L, 5);
				DG.Tweening.Ease arg5 = (DG.Tweening.Ease)ToLua.ToObject(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DoAnchoredPosition(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DoAnchoredPosition");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOMoveX(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(float), typeof(float), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveX(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveX(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveX(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(float), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveX(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(float), typeof(float), typeof(DG.Tweening.Ease), typeof(float), typeof(LuaInterface.LuaFunction)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				LuaFunction arg5 = ToLua.ToLuaFunction(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveX(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveX");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOMoveY(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(float), typeof(float), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveY(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveY(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(float), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveY(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveY(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveY");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOLocalMoveY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Transform));
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
			DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.CheckObject(L, 4, typeof(DG.Tweening.Ease));
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
			DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOLocalMoveY(arg0, arg1, arg2, arg3, arg4);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOIntValue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			UnityEngine.UI.Text arg0 = (UnityEngine.UI.Text)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.UI.Text));
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
			DG.Tweening.Ease arg4 = (DG.Tweening.Ease)ToLua.CheckObject(L, 5, typeof(DG.Tweening.Ease));
			LuaFunction arg5 = ToLua.CheckLuaFunction(L, 6);
			UnityDLL.GameLogic.Common.DOTweenUtil.DOIntValue(arg0, arg1, arg2, arg3, arg4, arg5);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOMoveZ(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(float), typeof(float), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveZ(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveZ(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(float), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveZ(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveZ(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DOMoveZ");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DORotate(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Vector3), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DORotate(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(UnityEngine.Vector3), typeof(float), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DORotate(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(UnityEngine.Vector3), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DORotate(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Vector3), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DORotate(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(float), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DORotate(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(float), typeof(float), typeof(int), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				float arg6 = (float)LuaDLL.lua_tonumber(L, 7);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DORotate(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DORotate");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOScale(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(UnityEngine.Vector3), typeof(float), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOScale(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Vector3), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOScale(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Vector3), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOScale(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(UnityEngine.Vector3), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOScale(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(float), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOScale(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Vector3), typeof(float), typeof(int), typeof(int), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOScale(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(float), typeof(float), typeof(int), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				float arg6 = (float)LuaDLL.lua_tonumber(L, 7);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOScale(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(float), typeof(float), typeof(int), typeof(int), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				float arg7 = (float)LuaDLL.lua_tonumber(L, 8);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOScale(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DOScale");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOScaleCall(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(UnityEngine.Vector3), typeof(float), typeof(float), typeof(LuaInterface.LuaFunction)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				LuaFunction arg4 = ToLua.ToLuaFunction(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOScaleCall(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(UnityEngine.Vector3), typeof(float), typeof(DG.Tweening.Ease), typeof(float), typeof(LuaInterface.LuaFunction)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.Ease arg3 = (DG.Tweening.Ease)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				LuaFunction arg5 = ToLua.ToLuaFunction(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOScaleCall(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DOScaleCall");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOAlpha(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOAlpha(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Material), typeof(float), typeof(float), typeof(float), typeof(float)))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.ToObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOAlpha(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(float), typeof(float), typeof(float), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOAlpha(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(float), typeof(float), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Ease arg4 = (DG.Tweening.Ease)ToLua.ToObject(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOAlpha(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Ease arg4 = (DG.Tweening.Ease)ToLua.ToObject(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOAlpha(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DOAlpha");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOAlphaText(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.UI.Text), typeof(float), typeof(float), typeof(float), typeof(float)))
			{
				UnityEngine.UI.Text arg0 = (UnityEngine.UI.Text)ToLua.ToObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOAlphaText(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(int), typeof(float), typeof(float), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOAlphaText(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DOAlphaText");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOAlphaImage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
			float arg5 = (float)LuaDLL.luaL_checknumber(L, 6);
			DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOAlphaImage(arg0, arg1, arg2, arg3, arg4, arg5);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOColor(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.UI.Image), typeof(UnityEngine.Color), typeof(UnityEngine.Color), typeof(float), typeof(float)))
			{
				UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.ToObject(L, 1);
				UnityEngine.Color arg1 = ToLua.ToColor(L, 2);
				UnityEngine.Color arg2 = ToLua.ToColor(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOColor(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Material), typeof(UnityEngine.Color), typeof(UnityEngine.Color), typeof(float), typeof(float)))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.ToObject(L, 1);
				UnityEngine.Color arg1 = ToLua.ToColor(L, 2);
				UnityEngine.Color arg2 = ToLua.ToColor(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOColor(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.UI.Image), typeof(UnityEngine.Color), typeof(UnityEngine.Color), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.ToObject(L, 1);
				UnityEngine.Color arg1 = ToLua.ToColor(L, 2);
				UnityEngine.Color arg2 = ToLua.ToColor(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Ease arg4 = (DG.Tweening.Ease)ToLua.ToObject(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOColor(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(int), typeof(UnityEngine.Color), typeof(UnityEngine.Color), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Color arg2 = ToLua.ToColor(L, 3);
				UnityEngine.Color arg3 = ToLua.ToColor(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOColor(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(int), typeof(UnityEngine.Color), typeof(UnityEngine.Color), typeof(float), typeof(DG.Tweening.Ease), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Color arg2 = ToLua.ToColor(L, 3);
				UnityEngine.Color arg3 = ToLua.ToColor(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Ease arg5 = (DG.Tweening.Ease)ToLua.ToObject(L, 6);
				float arg6 = (float)LuaDLL.lua_tonumber(L, 7);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOColor(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DOColor");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOPath(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(UnityEngine.Vector3[]), typeof(float), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				UnityEngine.Vector3[] arg1 = ToLua.CheckObjectArray<UnityEngine.Vector3>(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOPath(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Vector3[]), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Vector3[] arg1 = ToLua.CheckObjectArray<UnityEngine.Vector3>(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOPath(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(UnityEngine.Vector3[]), typeof(float), typeof(DG.Tweening.PathType), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				UnityEngine.Vector3[] arg1 = ToLua.CheckObjectArray<UnityEngine.Vector3>(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.PathType arg3 = (DG.Tweening.PathType)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOPath(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Vector3[]), typeof(float), typeof(DG.Tweening.PathType), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Vector3[] arg1 = ToLua.CheckObjectArray<UnityEngine.Vector3>(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				DG.Tweening.PathType arg3 = (DG.Tweening.PathType)ToLua.ToObject(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOPath(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DOPath");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOShake(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(int), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOShake(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(float), typeof(float), typeof(int), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOShake(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DOShake");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DOShakeRotate(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(float), typeof(float), typeof(int), typeof(float), typeof(float)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOShakeRotate(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Transform), typeof(float), typeof(float), typeof(int), typeof(float), typeof(float)))
			{
				UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.ToObject(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				float arg4 = (float)LuaDLL.lua_tonumber(L, 5);
				float arg5 = (float)LuaDLL.lua_tonumber(L, 6);
				DG.Tweening.Tweener o = UnityDLL.GameLogic.Common.DOTweenUtil.DOShakeRotate(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityDLL.GameLogic.Common.DOTweenUtil.DOShakeRotate");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Stop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			DG.Tweening.Tweener arg0 = (DG.Tweening.Tweener)ToLua.CheckObject(L, 1, typeof(DG.Tweening.Tweener));
			UnityDLL.GameLogic.Common.DOTweenUtil.Stop(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetEaseType(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			DG.Tweening.Ease o = UnityDLL.GameLogic.Common.DOTweenUtil.GetEaseType(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

