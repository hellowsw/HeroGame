//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameCommon_GameConstWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameCommon.GameConst), typeof(System.Object));
		L.RegFunction("New", _CreateGameCommon_GameConst);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegConstant("STANDARD_WIDTH", 480);
		L.RegConstant("STANDARD_HEIGHT", 854);
		L.RegConstant("ShowFPS", 0);
		L.RegConstant("DebugMode", 1);
		L.RegConstant("OuterNet", 0);
		L.RegVar("LoginProgram", get_LoginProgram, set_LoginProgram);
		L.RegConstant("UpdateMode", 0);
		L.RegConstant("PlATFORM_FLAG_FLASH", 1);
		L.RegConstant("PlATFORM_FLAG_WINDOWS", 2);
		L.RegConstant("PLATFORM_FLAG_ANDROID", 3);
		L.RegConstant("PLATFORM_FLAG_IOS", 4);
		L.RegVar("LuaTempDir", get_LuaTempDir, null);
		L.RegVar("AppName", get_AppName, null);
		L.RegVar("ProgramVersion", get_ProgramVersion, null);
		L.RegVar("AppPrefix", get_AppPrefix, null);
		L.RegVar("ExtName", get_ExtName, null);
		L.RegVar("DownloadUrl", get_DownloadUrl, null);
		L.RegConstant("GameFrameRate", 60);
		L.RegConstant("Mobile", 1);
		L.RegVar("Cur_Platform_Flag", get_Cur_Platform_Flag, set_Cur_Platform_Flag);
		L.RegVar("LuaBundleMode", get_LuaBundleMode, null);
		L.RegVar("RWPath", get_RWPath, null);
		L.RegVar("StreamingPath", get_StreamingPath, null);
		L.RegVar("FrameworkRoot", get_FrameworkRoot, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameCommon_GameConst(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GameCommon.GameConst obj = new GameCommon.GameConst();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameCommon.GameConst.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LoginProgram(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, GameCommon.GameConst.LoginProgram);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaTempDir(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameCommon.GameConst.LuaTempDir);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AppName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameCommon.GameConst.AppName);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ProgramVersion(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameCommon.GameConst.ProgramVersion);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AppPrefix(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameCommon.GameConst.AppPrefix);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ExtName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameCommon.GameConst.ExtName);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DownloadUrl(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameCommon.GameConst.DownloadUrl);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Cur_Platform_Flag(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, GameCommon.GameConst.Cur_Platform_Flag);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaBundleMode(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, GameCommon.GameConst.LuaBundleMode);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RWPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameCommon.GameConst.RWPath);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_StreamingPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameCommon.GameConst.StreamingPath);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FrameworkRoot(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GameCommon.GameConst.FrameworkRoot);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LoginProgram(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			GameCommon.GameConst.LoginProgram = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Cur_Platform_Flag(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			GameCommon.GameConst.Cur_Platform_Flag = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

