//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Network_Net_LYBSerializerInWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Network.Net.LYBSerializerIn), typeof(Network.Net.TBinaryData));
		L.RegFunction("ResetStream", ResetStream);
		L.RegFunction("GetStream", GetStream);
		L.RegFunction("Handle", Handle);
		L.RegFunction("Skip", Skip);
		L.RegFunction("New", _CreateNetwork_Net_LYBSerializerIn);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateNetwork_Net_LYBSerializerIn(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Network.Net.LYBSerializerIn obj = new Network.Net.LYBSerializerIn();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Network.Net.LYBSerializerIn.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetStream(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.CheckObject(L, 1, typeof(Network.Net.LYBSerializerIn));
			obj.ResetStream();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetStream(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.CheckObject(L, 1, typeof(Network.Net.LYBSerializerIn));
			Network.Net.ILYBStreamSerializerBase o = obj.GetStream();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Handle(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(Network.Net.LYBStream)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				Network.Net.LYBStream arg0 = (Network.Net.LYBStream)ToLua.ToObject(L, 2);
				obj.Handle(ref arg0);
				ToLua.PushObject(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(short[])))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				short[] arg0 = ToLua.CheckNumberArray<short>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(ushort[])))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				ushort[] arg0 = ToLua.CheckNumberArray<ushort>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(char[])))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				char[] arg0 = ToLua.CheckCharBuffer(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(byte[])))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(Network.Net.TBinaryData)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				Network.Net.TBinaryData arg0 = (Network.Net.TBinaryData)ToLua.ToObject(L, 2);
				obj.Handle(ref arg0);
				ToLua.PushObject(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(ulong[])))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				ulong[] arg0 = ToLua.CheckNumberArray<ulong>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(float[])))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				float[] arg0 = ToLua.CheckNumberArray<float>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(double[])))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				double[] arg0 = ToLua.CheckNumberArray<double>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(int[])))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				int[] arg0 = ToLua.CheckNumberArray<int>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(uint[])))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				uint[] arg0 = ToLua.CheckNumberArray<uint>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(long[])))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				long[] arg0 = ToLua.CheckNumberArray<long>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(ushort)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				ushort arg0 = (ushort)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(int)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushinteger(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(uint)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				uint arg0 = (uint)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(sbyte)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				sbyte arg0 = (sbyte)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(byte)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				byte arg0 = (byte)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(short)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				short arg0 = (short)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(double)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				double arg0 = (double)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(bool)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				bool arg0 = LuaDLL.lua_toboolean(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushboolean(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(string)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushstring(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(long)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				long arg0 = LuaDLL.tolua_toint64(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.tolua_pushint64(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(ulong)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				ulong arg0 = LuaDLL.tolua_touint64(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.tolua_pushuint64(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(float)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				float arg0 = (float)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(long[]), typeof(short)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				long[] arg0 = ToLua.CheckNumberArray<long>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(uint[]), typeof(short)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				uint[] arg0 = ToLua.CheckNumberArray<uint>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(ulong[]), typeof(short)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				ulong[] arg0 = ToLua.CheckNumberArray<ulong>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(double[]), typeof(short)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				double[] arg0 = ToLua.CheckNumberArray<double>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(float[]), typeof(short)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				float[] arg0 = ToLua.CheckNumberArray<float>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(int[]), typeof(short)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				int[] arg0 = ToLua.CheckNumberArray<int>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(char[]), typeof(short)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				char[] arg0 = ToLua.CheckCharBuffer(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(string), typeof(short)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				LuaDLL.lua_pushstring(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(byte[]), typeof(short)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(ushort[]), typeof(short)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				ushort[] arg0 = ToLua.CheckNumberArray<ushort>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBSerializerIn), typeof(short[]), typeof(short)))
			{
				Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.ToObject(L, 1);
				short[] arg0 = ToLua.CheckNumberArray<short>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Network.Net.LYBSerializerIn.Handle");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Skip(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Network.Net.LYBSerializerIn obj = (Network.Net.LYBSerializerIn)ToLua.CheckObject(L, 1, typeof(Network.Net.LYBSerializerIn));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Skip(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

