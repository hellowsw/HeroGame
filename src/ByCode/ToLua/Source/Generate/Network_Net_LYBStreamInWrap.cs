//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Network_Net_LYBStreamInWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Network.Net.LYBStreamIn), typeof(Network.Net.LYBStream));
		L.RegFunction("Reset", Reset);
		L.RegFunction("ResetToContinue", ResetToContinue);
		L.RegFunction("HandleNull", HandleNull);
		L.RegFunction("HandleRpcOP", HandleRpcOP);
		L.RegFunction("Handle", Handle);
		L.RegFunction("Skip", Skip);
		L.RegFunction("SkipVariant", SkipVariant);
		L.RegFunction("WriteBinaryAlign4B", WriteBinaryAlign4B);
		L.RegFunction("WriteStringAlign4B", WriteStringAlign4B);
		L.RegFunction("New", _CreateNetwork_Net_LYBStreamIn);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("StreamSize", get_StreamSize, set_StreamSize);
		L.RegVar("StreamMaxSize", get_StreamMaxSize, set_StreamMaxSize);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateNetwork_Net_LYBStreamIn(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Network.Net.LYBStreamIn obj = new Network.Net.LYBStreamIn();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Network.Net.LYBStreamIn.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reset(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				obj.Reset();
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(Network.Net.TMemoryBufferEx)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				Network.Net.TMemoryBufferEx arg0 = (Network.Net.TMemoryBufferEx)ToLua.ToObject(L, 2);
				obj.Reset(arg0);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(byte[]), typeof(int), typeof(int)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				obj.Reset(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Network.Net.LYBStreamIn.Reset");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetToContinue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.CheckObject(L, 1, typeof(Network.Net.LYBStreamIn));
			Network.Net.TMemoryBufferEx arg0 = (Network.Net.TMemoryBufferEx)ToLua.CheckObject(L, 2, typeof(Network.Net.TMemoryBufferEx));
			obj.ResetToContinue(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HandleNull(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.CheckObject(L, 1, typeof(Network.Net.LYBStreamIn));
			obj.HandleNull();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HandleRpcOP(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.CheckObject(L, 1, typeof(Network.Net.LYBStreamIn));
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.HandleRpcOP(ref arg0);
			LuaDLL.lua_pushnumber(L, arg0);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Handle(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(short[])))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				short[] arg0 = ToLua.CheckNumberArray<short>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(ushort[])))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				ushort[] arg0 = ToLua.CheckNumberArray<ushort>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(int[])))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				int[] arg0 = ToLua.CheckNumberArray<int>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(byte[])))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(Network.Net.TBinaryData)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				Network.Net.TBinaryData arg0 = (Network.Net.TBinaryData)ToLua.ToObject(L, 2);
				obj.Handle(ref arg0);
				ToLua.PushObject(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(Network.Net.LYBStream)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				Network.Net.LYBStream arg0 = (Network.Net.LYBStream)ToLua.ToObject(L, 2);
				obj.Handle(ref arg0);
				ToLua.PushObject(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(float[])))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				float[] arg0 = ToLua.CheckNumberArray<float>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(double[])))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				double[] arg0 = ToLua.CheckNumberArray<double>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(Network.Serialize.BaseVariant)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				Network.Serialize.BaseVariant arg0 = (Network.Serialize.BaseVariant)ToLua.ToObject(L, 2);
				obj.Handle(ref arg0);
				ToLua.PushValue(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(uint[])))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				uint[] arg0 = ToLua.CheckNumberArray<uint>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(long[])))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				long[] arg0 = ToLua.CheckNumberArray<long>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(ulong[])))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				ulong[] arg0 = ToLua.CheckNumberArray<ulong>(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(char[])))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				char[] arg0 = ToLua.CheckCharBuffer(L, 2);
				obj.Handle(ref arg0);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(ushort)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				ushort arg0 = (ushort)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(int)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushinteger(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(uint)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				uint arg0 = (uint)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(sbyte)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				sbyte arg0 = (sbyte)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(byte)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				byte arg0 = (byte)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(short)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				short arg0 = (short)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(double)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				double arg0 = (double)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(bool)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				bool arg0 = LuaDLL.lua_toboolean(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushboolean(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(string)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushstring(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(long)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				long arg0 = LuaDLL.tolua_toint64(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.tolua_pushint64(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(ulong)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				ulong arg0 = LuaDLL.tolua_touint64(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.tolua_pushuint64(L, arg0);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(float)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				float arg0 = (float)LuaDLL.lua_tonumber(L, 2);
				obj.Handle(ref arg0);
				LuaDLL.lua_pushnumber(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(ulong[]), typeof(short)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				ulong[] arg0 = ToLua.CheckNumberArray<ulong>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(long[]), typeof(short)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				long[] arg0 = ToLua.CheckNumberArray<long>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(double[]), typeof(short)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				double[] arg0 = ToLua.CheckNumberArray<double>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(float[]), typeof(short)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				float[] arg0 = ToLua.CheckNumberArray<float>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(short[]), typeof(short)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				short[] arg0 = ToLua.CheckNumberArray<short>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(byte[]), typeof(short)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(ushort[]), typeof(short)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				ushort[] arg0 = ToLua.CheckNumberArray<ushort>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(uint[]), typeof(short)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				uint[] arg0 = ToLua.CheckNumberArray<uint>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(Network.Net.LYBStreamIn), typeof(int[]), typeof(short)))
			{
				Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.ToObject(L, 1);
				int[] arg0 = ToLua.CheckNumberArray<int>(L, 2);
				short arg1 = (short)LuaDLL.lua_tonumber(L, 3);
				obj.Handle(ref arg0, arg1);
				ToLua.Push(L, arg0);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Network.Net.LYBStreamIn.Handle");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Skip(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.CheckObject(L, 1, typeof(Network.Net.LYBStreamIn));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Skip(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SkipVariant(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.CheckObject(L, 1, typeof(Network.Net.LYBStreamIn));
			obj.SkipVariant();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteBinaryAlign4B(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.CheckObject(L, 1, typeof(Network.Net.LYBStreamIn));
			Network.Net.TBinaryData arg0 = (Network.Net.TBinaryData)ToLua.CheckObject(L, 2, typeof(Network.Net.TBinaryData));
			obj.WriteBinaryAlign4B(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteStringAlign4B(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)ToLua.CheckObject(L, 1, typeof(Network.Net.LYBStreamIn));
			string arg0 = ToLua.CheckString(L, 2);
			short arg1 = (short)LuaDLL.luaL_checknumber(L, 3);
			obj.WriteStringAlign4B(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_StreamSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)o;
			int ret = obj.StreamSize;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index StreamSize on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_StreamMaxSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)o;
			int ret = obj.StreamMaxSize;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index StreamMaxSize on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_StreamSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.StreamSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index StreamSize on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_StreamMaxSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Network.Net.LYBStreamIn obj = (Network.Net.LYBStreamIn)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.StreamMaxSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index StreamMaxSize on a nil value" : e.Message);
		}
	}
}

